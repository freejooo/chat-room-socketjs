{"ast":null,"code":"var _jsxFileName = \"/home/meet/projects/chat-app/chat-app-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport Linkify from 'react-linkify';\nimport ReactLinkPreview from 'react-link-preview';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3002');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [userHistory, setUserHistory] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  // eslint-disable-next-line\n  const [selectingImage, setSelectingImage] = useState(false);\n  const [modalImage, setModalImage] = useState(null);\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n      socket.emit('join', username);\n    }\n  };\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n      socket.on('chat message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n        scrollToBottom();\n      });\n      socket.on('active users', users => {\n        setActiveUsers(users);\n      });\n      socket.on('user history', history => {\n        setUserHistory(history);\n      });\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setActiveUsers([]);\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoadingMessages(true);\n      try {\n        const response = await fetch('http://localhost:3002/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const limitedMessages = data.slice(-50); // Limiting messages to the last 50\n        setMessages(limitedMessages);\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n  const scrollToBottom = () => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  };\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n        image: selectedImage\n      };\n      socket.emit('chat message', message);\n      setInputMessage('');\n      setSelectedImage(null);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n      scrollToBottom();\n    }\n  };\n  const handleMessage = message => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const url = message.message.match(urlRegex);\n    if (message.image) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.username === username ? 'current-user' : 'other-user'}`,\n        children: [message.username !== username && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-username\",\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.image,\n            alt: \"message content\",\n            className: \"message-image\",\n            onClick: () => setModalImage(message.image)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    } else if (url) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.username === username ? 'current-user' : 'other-user'}`,\n        children: [message.username !== username && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-username\",\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(Linkify, {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactLinkPreview, {\n            url: url[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.username === username ? 'current-user' : 'other-user'}`,\n        children: [message.username !== username && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-username\",\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(Linkify, {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  useEffect(() => {\n    const updateActiveUsers = () => {\n      const activeUsernames = userHistory.filter(user => user.status === 'connected').map(user => user.username);\n      setActiveUsers(activeUsernames);\n    };\n    updateActiveUsers();\n  }, [userHistory]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleImageChange = e => {\n    let files = e.target.files;\n    if (files.length === 0) {\n      console.log('No file selected');\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    reader.onload = e => {\n      setSelectedImage(e.target.result);\n      setSelectingImage(false); // Set selectingImage to false after image is selected\n    };\n\n    reader.onerror = error => {\n      console.log('Error reading file:', error);\n      setSelectingImage(false); // Set selectingImage to false on error as well\n    };\n  };\n\n  const handleSendImage = () => {\n    if (selectedImage) {\n      const message = {\n        username,\n        message: '',\n        image: selectedImage\n      };\n      socket.emit('chat message', message);\n      setSelectedImage(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    basename: process.env.PUBLIC_URL,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [!chatStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Enter your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Your username...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartChat,\n          children: \"Start Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Active Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), activeUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: user\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-list\",\n            ref: messageListRef,\n            children: loadingMessages ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading messages...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this) : messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: handleMessage(message)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username-container\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-username\",\n                children: [username, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyDown: handleKeyDown,\n              placeholder: \"Type your message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".jpeg, .png, .jpg\",\n                className: \"file-input\",\n                onChange: e => handleImageChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"send-image-button\",\n                onClick: handleSendImage,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-history\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"User History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), userHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: userHistory.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [user.username, \" - \", user.status]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No user history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background\",\n        onClick: () => setModalImage(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: modalImage,\n            alt: \"modal content\",\n            className: \"modal-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3XuT/2lY0azLVFE6Db646qJb2gs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Linkify","ReactLinkPreview","BrowserRouter","Router","Switch","Route","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","messages","setMessages","inputMessage","setInputMessage","activeUsers","setActiveUsers","userHistory","setUserHistory","messageListRef","chatStarted","setChatStarted","loadingMessages","setLoadingMessages","selectedImage","setSelectedImage","selectingImage","setSelectingImage","modalImage","setModalImage","handleStartChat","connect","emit","on","console","log","message","prevMessages","scrollToBottom","users","history","disconnect","fetchMessages","response","fetch","ok","Error","status","data","json","limitedMessages","slice","error","current","scrollTop","scrollHeight","handleSendMessage","image","handleKeyDown","e","key","handleMessage","urlRegex","url","match","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","updateActiveUsers","activeUsernames","filter","user","map","handleImageChange","files","target","length","reader","FileReader","readAsDataURL","onload","result","onerror","handleSendImage","basename","process","env","PUBLIC_URL","type","value","onChange","placeholder","ref","index","onKeyDown","accept","_c","$RefreshReg$"],"sources":["/home/meet/projects/chat-app/chat-app-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport Linkify from 'react-linkify';\nimport ReactLinkPreview from 'react-link-preview';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n\nconst socket = io('http://localhost:3002');\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [userHistory, setUserHistory] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  // eslint-disable-next-line\n  const [selectingImage, setSelectingImage] = useState(false);\n  const [modalImage, setModalImage] = useState(null);\n\n\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n      socket.emit('join', username);\n    }\n  };\n\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n\n      socket.on('chat message', (message) => {\n        setMessages((prevMessages) => [...prevMessages, message]);\n        scrollToBottom();\n      });\n\n      socket.on('active users', (users) => {\n        setActiveUsers(users);\n      });\n\n      socket.on('user history', (history) => {\n        setUserHistory(history);\n      });\n\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setActiveUsers([]);\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoadingMessages(true);\n      try {\n        const response = await fetch('http://localhost:3002/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const limitedMessages = data.slice(-50); // Limiting messages to the last 50\n        setMessages(limitedMessages);\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n\n  const scrollToBottom = () => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n        image: selectedImage,\n      };\n\n      socket.emit('chat message', message);\n      setInputMessage('');\n      setSelectedImage(null);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n      scrollToBottom();\n    }\n  };\n  const handleMessage = (message) => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const url = message.message.match(urlRegex);\n    if (message.image) {\n      return (\n        <div className={`message-container ${message.username === username ? 'current-user' : 'other-user'}`}>\n          {message.username !== username && (\n            <span className=\"message-username\">{message.username}:</span>\n          )}\n          <div className=\"message-content\">\n            <img src={message.image} alt=\"message content\" className=\"message-image\" onClick={() => setModalImage(message.image)} />\n          </div>\n        </div>\n      );\n    } else if (url) {\n      return (\n        <div className={`message-container ${message.username === username ? 'current-user' : 'other-user'}`}>\n          {message.username !== username && (\n            <span className=\"message-username\">{message.username}:</span>\n          )}\n          <div className=\"message-content\">\n            <Linkify>{message.message}</Linkify>\n            <ReactLinkPreview url={url[0]} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`message-container ${message.username === username ? 'current-user' : 'other-user'}`}>\n          {message.username !== username && (\n            <span className=\"message-username\">{message.username}:</span>\n          )}\n          <div className=\"message-content\">\n            <Linkify>{message.message}</Linkify>\n          </div>\n        </div>\n      );\n    }\n  };\n  \n  useEffect(() => {\n    const updateActiveUsers = () => {\n      const activeUsernames = userHistory\n        .filter((user) => user.status === 'connected')\n        .map((user) => user.username);\n      setActiveUsers(activeUsernames);\n    };\n\n    updateActiveUsers();\n  }, [userHistory]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleImageChange = (e) => {\n    let files = e.target.files;\n    if (files.length === 0) {\n      console.log('No file selected');\n      return;\n    }\n\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n\n    reader.onload = (e) => {\n      setSelectedImage(e.target.result);\n      setSelectingImage(false); // Set selectingImage to false after image is selected\n    };\n\n    reader.onerror = (error) => {\n      console.log('Error reading file:', error);\n      setSelectingImage(false); // Set selectingImage to false on error as well\n    };\n  };\n\n  const handleSendImage = () => {\n    if (selectedImage) {\n      const message = {\n        username,\n        message: '',\n        image: selectedImage,\n      };\n\n      socket.emit('chat message', message);\n      setSelectedImage(null);\n    }\n  };\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"app\">\n      {!chatStarted ? (\n        <div className=\"start-chat\">\n          <h1>Enter your username</h1>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Your username...\"\n          />\n          <button onClick={handleStartChat}>Start Chat</button>\n        </div>\n      ) : (\n        <div className=\"chat-container\">\n          <div className=\"sidebar\">\n            <h2>Active Users</h2>\n            {activeUsers.length > 0 ? (\n              <ul>\n                {activeUsers.map((user) => (\n                  <li key={user}>{user}</li>\n                ))}\n              </ul>\n            ) : (\n              <p>No active users</p>\n            )}\n          </div>\n          <div className=\"chat\">\n            <div className=\"message-list\" ref={messageListRef}>\n              {loadingMessages ? (\n                <p>Loading messages...</p>\n              ) : messages.length > 0 ? (\n                messages.map((message, index) => (\n                  <div key={index} className=\"message\">\n                    {handleMessage(message)}\n                  </div>\n                ))\n              ) : (\n                <p>No messages</p>\n              )}\n            </div>\n            <div className=\"input-container\">\n              <div className=\"username-container\">\n                <span className=\"message-username\">{username}:</span>\n              </div>\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyDown={handleKeyDown}\n                placeholder=\"Type your message...\"\n              />\n              <div className=\"file-input-wrapper\">\n                <input\n                  type=\"file\"\n                  accept=\".jpeg, .png, .jpg\"\n                  className=\"file-input\"\n                  onChange={(e) => handleImageChange(e)}\n                />\n                <button className=\"send-image-button\" onClick={handleSendImage}>\n                  <i className=\"fas fa-image\"></i>\n                </button>\n              </div>\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n          <div className=\"user-history\">\n            <h2>User History</h2>\n            {userHistory.length > 0 ? (\n              <ul>\n                {userHistory.map((user, index) => (\n                  <li key={index}>\n                    {user.username} - {user.status}\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>No user history</p>\n            )}\n          </div>\n        </div>\n      )}\n\n{modalImage && (\n        <div className=\"modal-background\" onClick={() => setModalImage(null)}>\n          <div className=\"modal-content\">\n            <img src={modalImage} alt=\"modal content\" className=\"modal-image\" />\n          </div>\n        </div>\n      )}\n    </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}