{"ast":null,"code":"var _jsxFileName = \"/home/meet/projects/chat-app/chat-app-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3002');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [userHistory, setUserHistory] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n      socket.emit('join', username);\n    }\n  };\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n      socket.on('chat message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n        scrollToBottom();\n      });\n      socket.on('active users', users => {\n        setActiveUsers(users);\n      });\n      socket.on('user history', history => {\n        setUserHistory(history);\n      });\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setActiveUsers([]);\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoadingMessages(true);\n      try {\n        const response = await fetch('http://localhost:3002/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const limitedMessages = data.slice(-50); // Limiting messages to the last 50\n        setMessages(limitedMessages);\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n  const scrollToBottom = () => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  };\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n        image: selectedImage\n      };\n      socket.emit('chat message', message);\n      setInputMessage('');\n      setSelectedImage(null);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n      scrollToBottom();\n    }\n  };\n  useEffect(() => {\n    const updateActiveUsers = () => {\n      const activeUsernames = userHistory.filter(user => user.status === 'connected').map(user => user.username);\n      setActiveUsers(activeUsernames);\n    };\n    updateActiveUsers();\n  }, [userHistory]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleMessage = message => {\n    if (message.image) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${message.image}`,\n        alt: \"message content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-content\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !chatStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Your username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartChat,\n        children: \"Start Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Active Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), activeUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          ref: messageListRef,\n          children: loadingMessages ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this) : messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-username\",\n              children: [message.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this), ' ', handleMessage(message)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-history\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), userHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userHistory.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user.username, \" - \", user.status]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No user history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3C4ydXLkctwHbBvq054ybup1vyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","messages","setMessages","inputMessage","setInputMessage","activeUsers","setActiveUsers","userHistory","setUserHistory","messageListRef","chatStarted","setChatStarted","loadingMessages","setLoadingMessages","selectedImage","setSelectedImage","handleStartChat","connect","emit","on","console","log","message","prevMessages","scrollToBottom","users","history","disconnect","fetchMessages","response","fetch","ok","Error","status","data","json","limitedMessages","slice","error","current","scrollTop","scrollHeight","handleSendMessage","image","handleKeyDown","e","key","updateActiveUsers","activeUsernames","filter","user","map","handleMessage","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","value","onChange","target","placeholder","onClick","length","ref","index","onKeyDown","_c","$RefreshReg$"],"sources":["/home/meet/projects/chat-app/chat-app-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3002');\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [userHistory, setUserHistory] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n      socket.emit('join', username);\n    }\n  };\n\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n\n      socket.on('chat message', (message) => {\n        setMessages((prevMessages) => [...prevMessages, message]);\n        scrollToBottom();\n      });\n\n      socket.on('active users', (users) => {\n        setActiveUsers(users);\n      });\n\n      socket.on('user history', (history) => {\n        setUserHistory(history);\n      });\n\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setActiveUsers([]);\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoadingMessages(true);\n      try {\n        const response = await fetch('http://localhost:3002/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const limitedMessages = data.slice(-50); // Limiting messages to the last 50\n        setMessages(limitedMessages);\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n  \n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n\n  const scrollToBottom = () => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n        image: selectedImage,\n      };\n\n      socket.emit('chat message', message);\n      setInputMessage('');\n      setSelectedImage(null);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n      scrollToBottom();\n    }\n  };\n\n  useEffect(() => {\n    const updateActiveUsers = () => {\n      const activeUsernames = userHistory\n        .filter((user) => user.status === 'connected')\n        .map((user) => user.username);\n      setActiveUsers(activeUsernames);\n    };\n\n    updateActiveUsers();\n  }, [userHistory]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleMessage = (message) => {\n    if(message.image) {\n      return <img src={`data:image/png;base64,${message.image}`} alt=\"message content\" />\n    } else {\n      return <span className=\"message-content\">{message.message}</span>\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      {!chatStarted ? (\n        <div className=\"start-chat\">\n          <h1>Enter your username</h1>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            placeholder=\"Your username...\"\n          />\n          <button onClick={handleStartChat}>Start Chat</button>\n        </div>\n      ) : (\n        <div className=\"chat-container\">\n          <div className=\"sidebar\">\n            <h2>Active Users</h2>\n            {activeUsers.length > 0 ? (\n              <ul>\n                {activeUsers.map((user) => (\n                  <li key={user}>{user}</li>\n                ))}\n              </ul>\n            ) : (\n              <p>No active users</p>\n            )}\n          </div>\n          <div className=\"chat\">\n            <div className=\"message-list\" ref={messageListRef}>\n              {loadingMessages ? (\n                <p>Loading messages...</p>\n              ) : messages.length > 0 ? (\n                messages.map((message, index) => (\n                  <div key={index} className=\"message\">\n                    <span className=\"message-username\">{message.username}:</span>{' '}\n                    {handleMessage(message)}\n                  </div>\n                ))\n              ) : (\n                <p>No messages</p>\n              )}\n            </div>\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyDown={handleKeyDown}\n                placeholder=\"Type your message...\"\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n          <div className=\"user-history\">\n            <h2>User History</h2>\n            {userHistory.length > 0 ? (\n              <ul>\n                {userHistory.map((user, index) => (\n                  <li key={index}>\n                    {user.username} - {user.status}\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <p>No user history</p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMkB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMyB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjB,QAAQ,EAAE;MACZY,cAAc,CAAC,IAAI,CAAC;MACpBf,MAAM,CAACqB,OAAO,CAAC,CAAC;MAChBrB,MAAM,CAACsB,IAAI,CAAC,MAAM,EAAEnB,QAAQ,CAAC;IAC/B;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,IAAIoB,WAAW,EAAE;MACfd,MAAM,CAACuB,EAAE,CAAC,SAAS,EAAE,MAAM;QACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC,CAAC;MAEFzB,MAAM,CAACuB,EAAE,CAAC,cAAc,EAAGG,OAAO,IAAK;QACrCpB,WAAW,CAAEqB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;QACzDE,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MAEF5B,MAAM,CAACuB,EAAE,CAAC,cAAc,EAAGM,KAAK,IAAK;QACnCnB,cAAc,CAACmB,KAAK,CAAC;MACvB,CAAC,CAAC;MAEF7B,MAAM,CAACuB,EAAE,CAAC,cAAc,EAAGO,OAAO,IAAK;QACrClB,cAAc,CAACkB,OAAO,CAAC;MACzB,CAAC,CAAC;MAEF9B,MAAM,CAACuB,EAAE,CAAC,YAAY,EAAE,MAAM;QAC5BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCf,cAAc,CAAC,EAAE,CAAC;MACpB,CAAC,CAAC;MAEF,OAAO,MAAM;QACXV,MAAM,CAAC+B,UAAU,CAAC,CAAC;MACrB,CAAC;IACH;EACF,CAAC,EAAE,CAACjB,WAAW,CAAC,CAAC;EAEjBpB,SAAS,CAAC,MAAM;IACd,MAAMsC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCf,kBAAkB,CAAC,IAAI,CAAC;MACxB,IAAI;QACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;QAC9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,eAAe,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzCnC,WAAW,CAACkC,eAAe,CAAC;QAC5BZ,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,SAAS;QACRzB,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAED,IAAIH,WAAW,EAAE;MACfkB,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjB,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIf,cAAc,CAAC8B,OAAO,EAAE;MAC1B9B,cAAc,CAAC8B,OAAO,CAACC,SAAS,GAAG/B,cAAc,CAAC8B,OAAO,CAACE,YAAY;IACxE;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIvC,YAAY,EAAE;MAChB,MAAMmB,OAAO,GAAG;QACdvB,QAAQ;QACRuB,OAAO,EAAEnB,YAAY;QACrBwC,KAAK,EAAE7B;MACT,CAAC;MAEDlB,MAAM,CAACsB,IAAI,CAAC,cAAc,EAAEI,OAAO,CAAC;MACpClB,eAAe,CAAC,EAAE,CAAC;MACnBW,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAM6B,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBJ,iBAAiB,CAAC,CAAC;MACnBlB,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd,MAAMyD,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,eAAe,GAAGzC,WAAW,CAChC0C,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,MAAM,KAAK,WAAW,CAAC,CAC7CkB,GAAG,CAAED,IAAI,IAAKA,IAAI,CAACnD,QAAQ,CAAC;MAC/BO,cAAc,CAAC0C,eAAe,CAAC;IACjC,CAAC;IAEDD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACxC,WAAW,CAAC,CAAC;EAEjBjB,SAAS,CAAC,MAAM;IACdkC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;EAEd,MAAMmD,aAAa,GAAI9B,OAAO,IAAK;IACjC,IAAGA,OAAO,CAACqB,KAAK,EAAE;MAChB,oBAAOhD,OAAA;QAAK0D,GAAG,EAAG,yBAAwB/B,OAAO,CAACqB,KAAM,EAAE;QAACW,GAAG,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrF,CAAC,MAAM;MACL,oBAAO/D,OAAA;QAAMgE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEtC,OAAO,CAACA;MAAO;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IACnE;EACF,CAAC;EAED,oBACE/D,OAAA;IAAKgE,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAAClD,WAAW,gBACXf,OAAA;MAAKgE,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBjE,OAAA;QAAAiE,QAAA,EAAI;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B/D,OAAA;QACEkE,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/D,QAAS;QAChBgE,QAAQ,EAAGlB,CAAC,IAAK7C,WAAW,CAAC6C,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC;MAAkB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACF/D,OAAA;QAAQuE,OAAO,EAAElD,eAAgB;QAAA4C,QAAA,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,gBAEN/D,OAAA;MAAKgE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjE,OAAA;QAAKgE,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBjE,OAAA;UAAAiE,QAAA,EAAI;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBrD,WAAW,CAAC8D,MAAM,GAAG,CAAC,gBACrBxE,OAAA;UAAAiE,QAAA,EACGvD,WAAW,CAAC8C,GAAG,CAAED,IAAI,iBACpBvD,OAAA;YAAAiE,QAAA,EAAgBV;UAAI,GAAXA,IAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAEL/D,OAAA;UAAAiE,QAAA,EAAG;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACtB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN/D,OAAA;QAAKgE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBjE,OAAA;UAAKgE,SAAS,EAAC,cAAc;UAACS,GAAG,EAAE3D,cAAe;UAAAmD,QAAA,EAC/ChD,eAAe,gBACdjB,OAAA;YAAAiE,QAAA,EAAG;UAAmB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,GACxBzD,QAAQ,CAACkE,MAAM,GAAG,CAAC,GACrBlE,QAAQ,CAACkD,GAAG,CAAC,CAAC7B,OAAO,EAAE+C,KAAK,kBAC1B1E,OAAA;YAAiBgE,SAAS,EAAC,SAAS;YAAAC,QAAA,gBAClCjE,OAAA;cAAMgE,SAAS,EAAC,kBAAkB;cAAAC,QAAA,GAAEtC,OAAO,CAACvB,QAAQ,EAAC,GAAC;YAAA;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAAC,GAAG,EAChEN,aAAa,CAAC9B,OAAO,CAAC;UAAA,GAFf+C,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACN,CAAC,gBAEF/D,OAAA;YAAAiE,QAAA,EAAG;UAAW;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAClB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN/D,OAAA;UAAKgE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BjE,OAAA;YACEkE,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE3D,YAAa;YACpB4D,QAAQ,EAAGlB,CAAC,IAAKzC,eAAe,CAACyC,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;YACjDQ,SAAS,EAAE1B,aAAc;YACzBqB,WAAW,EAAC;UAAsB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACF/D,OAAA;YAAQuE,OAAO,EAAExB,iBAAkB;YAAAkB,QAAA,EAAC;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN/D,OAAA;QAAKgE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BjE,OAAA;UAAAiE,QAAA,EAAI;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBnD,WAAW,CAAC4D,MAAM,GAAG,CAAC,gBACrBxE,OAAA;UAAAiE,QAAA,EACGrD,WAAW,CAAC4C,GAAG,CAAC,CAACD,IAAI,EAAEmB,KAAK,kBAC3B1E,OAAA;YAAAiE,QAAA,GACGV,IAAI,CAACnD,QAAQ,EAAC,KAAG,EAACmD,IAAI,CAACjB,MAAM;UAAA,GADvBoC,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,gBAEL/D,OAAA;UAAAiE,QAAA,EAAG;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACtB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5D,EAAA,CAlMQD,GAAG;AAAA0E,EAAA,GAAH1E,GAAG;AAoMZ,eAAeA,GAAG;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}