{"ast":null,"code":"var _jsxFileName = \"/home/meet/projects/chat-app-client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    // Listen for incoming chat messages\n    socket.on('chat message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Clean up the socket connection on unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleSendMessage = () => {\n    if (inputMessage && username) {\n      const message = {\n        username,\n        message: inputMessage\n      };\n\n      // Emit the chat message to the server\n      socket.emit('chat message', message);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), \" \", message.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EYjzCRTcafX6ipi6nv6/1pnka1M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","inputMessage","setInputMessage","username","setUsername","on","message","prevMessages","disconnect","handleSendMessage","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/meet/projects/chat-app-client/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3001');\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    // Listen for incoming chat messages\n    socket.on('chat message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Clean up the socket connection on unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleSendMessage = () => {\n    if (inputMessage && username) {\n      const message = {\n        username,\n        message: inputMessage,\n      };\n\n      // Emit the chat message to the server\n      socket.emit('chat message', message);\n\n      setInputMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chat App</h1>\n\n      <div className=\"chat-container\">\n        <div className=\"message-list\">\n          {messages.map((message, index) => (\n            <div key={index}>\n              <strong>{message.username}:</strong> {message.message}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={e => setInputMessage(e.target.value)}\n          />\n\n          <input\n            type=\"text\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n\n          <button onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}