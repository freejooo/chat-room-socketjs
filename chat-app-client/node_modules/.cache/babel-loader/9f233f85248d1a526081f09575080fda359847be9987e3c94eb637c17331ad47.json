{"ast":null,"code":"var _jsxFileName = \"/home/meet/projects/chat-app/chat-app-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3002');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [leftUsers, setLeftUsers] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n    }\n  };\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        socket.emit('join', username);\n      });\n      socket.on('chat message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n        scrollToBottom();\n      });\n      socket.on('active users', users => {\n        setActiveUsers(users);\n      });\n      socket.on('user left', user => {\n        setLeftUsers(prevUsers => [...prevUsers, user]);\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted, username]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMessages(data.reverse());\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      }\n    };\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n  const scrollToBottom = () => {\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  };\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage\n      };\n      socket.emit('chat message', message);\n      setInputMessage('');\n      scrollToBottom();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !chatStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Your username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartChat,\n        children: \"Start Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Active Users: \", activeUsers.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Users Left: \", leftUsers.length > 0 && leftUsers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          ref: messageListRef,\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-username\",\n              children: [message.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-content\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cXLK4XBWnf9NcRDv7CuKo8+5JnA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","messages","setMessages","inputMessage","setInputMessage","activeUsers","setActiveUsers","leftUsers","setLeftUsers","messageListRef","chatStarted","setChatStarted","handleStartChat","connect","on","emit","message","prevMessages","scrollToBottom","users","user","prevUsers","disconnect","fetchMessages","response","fetch","ok","Error","status","data","json","reverse","error","console","current","scrollTop","scrollHeight","handleSendMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","className","length","join","ref","map","index","_c","$RefreshReg$"],"sources":["/home/meet/projects/chat-app/chat-app-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport \"./App.css\";\n\nconst socket = io('http://localhost:3002');\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [leftUsers, setLeftUsers] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n    }\n  };\n\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        socket.emit('join', username);\n      });\n\n      socket.on('chat message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n        scrollToBottom();\n      });\n\n      socket.on('active users', users => {\n        setActiveUsers(users);\n      });\n\n      socket.on('user left', user => {\n        setLeftUsers(prevUsers => [...prevUsers, user]);\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted, username]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMessages(data.reverse());\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      }\n    };\n\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n\n  const scrollToBottom = () => {\n    messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n      };\n\n      socket.emit('chat message', message);\n\n      setInputMessage('');\n      scrollToBottom();\n    }\n  };\n\n  return (\n    <div>\n      {!chatStarted ? (\n        <div>\n          <h1>Enter your username</h1>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"Your username...\"\n          />\n          <button onClick={handleStartChat}>Start Chat</button>\n        </div>\n      ) : (\n        <div>\n          <h1>Chat App</h1>\n\n          <div className=\"user-status\">\n            <p>Active Users: {activeUsers.length}</p>\n            <p>Users Left: {leftUsers.length > 0 && leftUsers.join(', ')}</p>\n          </div>\n\n          <div className=\"chat-container\">\n            <div className=\"message-list\" ref={messageListRef}>\n              {messages.map((message, index) => (\n                <div key={index} className=\"message\">\n                  <span className=\"message-username\">{message.username}:</span>{' '}\n                  <span className=\"message-content\">{message.message}</span>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"input-container\">\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={e => setInputMessage(e.target.value)}\n                placeholder=\"Type your message...\"\n              />\n\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}