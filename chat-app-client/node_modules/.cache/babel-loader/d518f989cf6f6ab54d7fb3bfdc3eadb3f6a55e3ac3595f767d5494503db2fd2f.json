{"ast":null,"code":"var _jsxFileName = \"/home/meet/projects/chat-app/chat-app-client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport Linkify from 'react-linkify';\nimport ReactLinkPreview from 'react-link-preview';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3002');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [userHistory, setUserHistory] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [modalImage, setModalImage] = useState(null);\n  const [selectingImage, setSelectingImage] = useState(false); // Add this line\n  const [chatRoomId, setChatRoomId] = useState('');\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n      socket.emit('join', {\n        username,\n        chatRoomId\n      });\n    }\n  };\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n      socket.on('chat message', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n        scrollToBottom();\n      });\n      socket.on('active users', users => {\n        setActiveUsers(users);\n      });\n      socket.on('user history', history => {\n        setUserHistory(history);\n      });\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setActiveUsers([]);\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoadingMessages(true);\n      try {\n        const response = await fetch('http://localhost:3002/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const limitedMessages = data.slice(-50); // Limiting messages to the last 50\n        setMessages(limitedMessages);\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n  const scrollToBottom = () => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  };\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n        image: selectedImage\n      };\n      socket.emit('chat message', message);\n      setInputMessage('');\n      setSelectedImage(null);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n      scrollToBottom();\n    }\n  };\n  const handleMessage = message => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const url = message.message.match(urlRegex);\n    if (message.image) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.username === username ? 'current-user' : 'other-user'}`,\n        children: [message.username !== username && /*#__PURE__*/_jsxDEV(Linkify, {\n          className: \"linkify-link\",\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.image,\n            alt: \"message content\",\n            className: \"message-image\",\n            onClick: () => setModalImage(message.image)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this);\n    } else if (url) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.username === username ? 'current-user' : 'other-user'}`,\n        children: [message.username !== username && /*#__PURE__*/_jsxDEV(Linkify, {\n          className: \"linkify-link\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red-link\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(Linkify, {\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactLinkPreview, {\n            url: url[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-container ${message.username === username ? 'current-user' : 'other-user'}`,\n        children: [message.username !== username && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-username\",\n          children: [message.username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(Linkify, {\n            className: \"red-link\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  useEffect(() => {\n    const updateActiveUsers = () => {\n      const activeUsernames = userHistory.filter(user => user.status === 'connected').map(user => user.username);\n      setActiveUsers(activeUsernames);\n    };\n    updateActiveUsers();\n  }, [userHistory]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleImageChange = e => {\n    let files = e.target.files;\n    if (files.length === 0) {\n      console.log('No file selected');\n      return;\n    }\n    let reader = new FileReader();\n    reader.onload = e => {\n      setSelectedImage(e.target.result);\n    };\n    reader.onerror = error => {\n      console.log('Error reading file:', error);\n    };\n    reader.readAsDataURL(files[0]);\n  };\n  const handleSendImage = () => {\n    if (selectedImage) {\n      const message = {\n        username,\n        message: '',\n        image: selectedImage\n      };\n      socket.emit('chat message', message);\n      setSelectedImage(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [!chatStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Enter your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          placeholder: \"Your username...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: chatRoomId,\n          onChange: e => setChatRoomId(e.target.value),\n          placeholder: \"Chat Room ID...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartChat,\n          children: \"Start Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Active Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), activeUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: activeUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: user\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-list\",\n            ref: messageListRef,\n            children: loadingMessages ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading messages...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this) : messages.length > 0 ? messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: handleMessage(message)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username-container\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-username\",\n                children: [username, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyDown: handleKeyDown,\n              placeholder: \"Type your message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-input\",\n                className: \"file-input-label\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUpload,\n                  className: \"upload-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".jpeg, .png, .jpg\",\n                id: \"file-input\",\n                className: \"file-input\",\n                onChange: e => handleImageChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"send-image-button\",\n                onClick: handleSendImage,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-history\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"User History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), userHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: userHistory.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [user.username, \" - \", user.status]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No user history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), modalImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background\",\n        onClick: () => setModalImage(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: modalImage,\n            alt: \"modal content\",\n            className: \"modal-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QUdqOkGb7jk2fkaksjx5XRoFnkM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Linkify","ReactLinkPreview","BrowserRouter","Router","FontAwesomeIcon","faImage","faUpload","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","messages","setMessages","inputMessage","setInputMessage","activeUsers","setActiveUsers","userHistory","setUserHistory","messageListRef","chatStarted","setChatStarted","loadingMessages","setLoadingMessages","selectedImage","setSelectedImage","modalImage","setModalImage","selectingImage","setSelectingImage","chatRoomId","setChatRoomId","handleStartChat","connect","emit","on","console","log","message","prevMessages","scrollToBottom","users","history","disconnect","fetchMessages","response","fetch","ok","Error","status","data","json","limitedMessages","slice","error","current","scrollTop","scrollHeight","handleSendMessage","image","handleKeyDown","e","key","handleMessage","urlRegex","url","match","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","updateActiveUsers","activeUsernames","filter","user","map","handleImageChange","files","target","length","reader","FileReader","onload","result","onerror","readAsDataURL","handleSendImage","type","value","onChange","placeholder","ref","index","onKeyDown","htmlFor","icon","accept","id","_c","$RefreshReg$"],"sources":["/home/meet/projects/chat-app/chat-app-client/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport Linkify from 'react-linkify';\nimport ReactLinkPreview from 'react-link-preview';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage, faUpload } from '@fortawesome/free-solid-svg-icons';\n\nconst socket = io('http://localhost:3002');\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [userHistory, setUserHistory] = useState([]);\n  const messageListRef = useRef(null);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [modalImage, setModalImage] = useState(null);\n  const [selectingImage, setSelectingImage] = useState(false); // Add this line\n  const [chatRoomId, setChatRoomId] = useState('');\n\n  const handleStartChat = () => {\n    if (username) {\n      setChatStarted(true);\n      socket.connect();\n      socket.emit('join', { username, chatRoomId });\n    }\n  };\n\n  useEffect(() => {\n    if (chatStarted) {\n      socket.on('connect', () => {\n        console.log('Connected to server');\n      });\n\n      socket.on('chat message', (message) => {\n        setMessages((prevMessages) => [...prevMessages, message]);\n        scrollToBottom();\n      });\n\n      socket.on('active users', (users) => {\n        setActiveUsers(users);\n      });\n\n      socket.on('user history', (history) => {\n        setUserHistory(history);\n      });\n\n      socket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setActiveUsers([]);\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [chatStarted]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      setLoadingMessages(true);\n      try {\n        const response = await fetch('http://localhost:3002/messages');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const limitedMessages = data.slice(-50); // Limiting messages to the last 50\n        setMessages(limitedMessages);\n        scrollToBottom();\n      } catch (error) {\n        console.error('Fetching messages failed: ', error);\n      } finally {\n        setLoadingMessages(false);\n      }\n    };\n\n    if (chatStarted) {\n      fetchMessages();\n    }\n  }, [chatStarted]);\n\n  const scrollToBottom = () => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage) {\n      const message = {\n        username,\n        message: inputMessage,\n        image: selectedImage,\n      };\n\n      socket.emit('chat message', message);\n      setInputMessage('');\n      setSelectedImage(null);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n      scrollToBottom();\n    }\n  };\n\n  const handleMessage = (message) => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const url = message.message.match(urlRegex);\n    if (message.image) {\n      return (\n        <div\n          className={`message-container ${\n            message.username === username ? 'current-user' : 'other-user'\n          }`}\n        >\n          {message.username !== username && (\n            <Linkify className=\"linkify-link\">{message.message}</Linkify>\n          )}\n          <div className=\"message-content\">\n            <img\n              src={message.image}\n              alt=\"message content\"\n              className=\"message-image\"\n              onClick={() => setModalImage(message.image)}\n            />\n          </div>\n        </div>\n      );\n    } else if (url) {\n      return (\n        <div\n          className={`message-container ${\n            message.username === username ? 'current-user' : 'other-user'\n          }`}\n        >\n          {message.username !== username && (\n            <Linkify className=\"linkify-link\">\n              <span className=\"red-link\">{message.message}</span>\n            </Linkify>\n          )}\n          <div className=\"message-content\">\n            <Linkify>{message.message}</Linkify>\n            <ReactLinkPreview url={url[0]} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={`message-container ${\n            message.username === username ? 'current-user' : 'other-user'\n          }`}\n        >\n          {message.username !== username && (\n            <span className=\"message-username\">{message.username}:</span>\n          )}\n          <div className=\"message-content\">\n            <Linkify className=\"red-link\">{message.message}</Linkify>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  useEffect(() => {\n    const updateActiveUsers = () => {\n      const activeUsernames = userHistory\n        .filter((user) => user.status === 'connected')\n        .map((user) => user.username);\n      setActiveUsers(activeUsernames);\n    };\n\n    updateActiveUsers();\n  }, [userHistory]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleImageChange = (e) => {\n    let files = e.target.files;\n    if (files.length === 0) {\n      console.log('No file selected');\n      return;\n    }\n\n    let reader = new FileReader();\n    reader.onload = (e) => {\n      setSelectedImage(e.target.result);\n    };\n\n    reader.onerror = (error) => {\n      console.log('Error reading file:', error);\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  const handleSendImage = () => {\n    if (selectedImage) {\n      const message = {\n        username,\n        message: '',\n        image: selectedImage,\n      };\n\n      socket.emit('chat message', message);\n      setSelectedImage(null);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {!chatStarted ? (\n          <div className=\"start-chat\">\n            <h1>Enter your username</h1>\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"Your username...\"\n            />\n            <input\n              type=\"text\"\n              value={chatRoomId}\n              onChange={(e) => setChatRoomId(e.target.value)}\n              placeholder=\"Chat Room ID...\"\n            />\n            <button onClick={handleStartChat}>Start Chat</button>\n          </div>\n        ) : (\n          <div className=\"chat-container\">\n            <div className=\"sidebar\">\n              <h2>Active Users</h2>\n              {activeUsers.length > 0 ? (\n                <ul>\n                  {activeUsers.map((user) => (\n                    <li key={user}>{user}</li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No active users</p>\n              )}\n            </div>\n            <div className=\"chat\">\n              <div className=\"message-list\" ref={messageListRef}>\n                {loadingMessages ? (\n                  <p>Loading messages...</p>\n                ) : messages.length > 0 ? (\n                  messages.map((message, index) => (\n                    <div key={index} className=\"message\">\n                      {handleMessage(message)}\n                    </div>\n                  ))\n                ) : (\n                  <p>No messages</p>\n                )}\n              </div>\n              <div className=\"input-container\">\n                <div className=\"username-container\">\n                  <span className=\"message-username\">{username}:</span>\n                </div>\n                <input\n                  type=\"text\"\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                  placeholder=\"Type your message...\"\n                />\n                <div className=\"file-input-wrapper\">\n                  <label htmlFor=\"file-input\" className=\"file-input-label\">\n                    <FontAwesomeIcon\n                      icon={faUpload}\n                      className=\"upload-icon\"\n                    />\n                  </label>\n                  <input\n                    type=\"file\"\n                    accept=\".jpeg, .png, .jpg\"\n                    id=\"file-input\"\n                    className=\"file-input\"\n                    onChange={(e) => handleImageChange(e)}\n                  />\n                  <button\n                    className=\"send-image-button\"\n                    onClick={handleSendImage}\n                  >\n                    <FontAwesomeIcon icon={faImage} />\n                  </button>\n                </div>\n                <button onClick={handleSendMessage}>Send</button>\n              </div>\n            </div>\n            <div className=\"user-history\">\n              <h2>User History</h2>\n              {userHistory.length > 0 ? (\n                <ul>\n                  {userHistory.map((user, index) => (\n                    <li key={index}>\n                      {user.username} - {user.status}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No user history</p>\n              )}\n            </div>\n          </div>\n        )}\n\n        {modalImage && (\n          <div\n            className=\"modal-background\"\n            onClick={() => setModalImage(null)}\n          >\n            <div className=\"modal-content\">\n              <img\n                src={modalImage}\n                alt=\"modal content\"\n                className=\"modal-image\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}